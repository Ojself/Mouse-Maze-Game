

/* --------------------------------------
    The constructor-class for the maze 
---------------------------------------*/
function Game(maze) {
    this.maze = maze
    this.level = 0
}





/* --------------------------------------
    makeMap-method: generates the current map-instance to the DOM.
    this method also includes jQuery functionalities (gameplay)
---------------------------------------*/

Game.prototype.makeMap = function () {

    //Clears the map before the level starts
    $(".gameboard").empty() 

    //creates empty div for each array-element, then adds it to the gameboard-div "gameboard"
    for (var i=0; i<20; i++) { 
        for(var j=0; j<32; j++) {
            var cellDiv = $( "<div id='" + i + "-" + j + "' class='cell'></div>" );
            $(".gameboard").append(cellDiv);


            //Adding CSS-classes to the different array-elements. 
            //For visuals AND gameplay-functionality (see jQuery section below)
            if( this.maze[i][j] == "O" ) {
                $( "#" + i + "-" + j ).addClass( "game-area" );

                //Adds visual borders only between "wall" and "game-area" divs
                if(this.maze[i][j-1] === "*") {
                    $( "#" + i + "-" + j ).addClass( "left-border" )
                }
                if(this.maze[i][j+1] === "*") {
                    $( "#" + i + "-" + j ).addClass( "right-border" )
                }
                if(this.maze[i-1][j] === "*") {
                    $( "#" + i + "-" + j ).addClass( "top-border" )
                }
                if(i<19 && this.maze[i+1][j] === "*") {
                    $( "#" + i + "-" + j ).addClass( "bottom-border" )
                }
            }
            //Adding the wall class.
            if( this.maze[i][j] == "*" ) {
                $( "#" + i + "-" + j ).addClass("wall");
            }
            //Adding the start-btn class.
            if( this.maze[i][j] == "S" ) {
                $( "#" + i + "-" + j ).addClass( "start-btn" );
                //Every corner of the start-button gets a different background-image
                if(this.maze[i-1][j] === "O" && this.maze[i][j-1] === "O") {
                    $( "#" + i + "-" + j ).addClass("nw-border")
                }
                if(this.maze[i-1][j] === "O" && this.maze[i][j+1] === "O") {
                    $( "#" + i + "-" + j ).addClass("ne-border")
                }
                if(this.maze[i+1][j] === "O" && this.maze[i][j-1] === "O") {
                    $( "#" + i + "-" + j ).addClass("sw-border")
                }
                if(this.maze[i+1][j] === "O" && this.maze[i][j+1] === "O") {
                    $( "#" + i + "-" + j ).addClass("se-border")
                }
            }
            //Adding the finish-btn class.
            if( this.maze[i][j] == "F" ) {
                //Every corner of the finish-button also gets a different background-image
                $( "#" + i + "-" + j ).addClass( "finish-btn" );
                if(this.maze[i-1][j] === "O" && this.maze[i][j-1] === "O") {
                    $( "#" + i + "-" + j ).css("background-image", "url(/img/cartoon_grass_nw.png)")
                }
                if(this.maze[i-1][j] === "O" && this.maze[i][j+1] === "O") {
                    $( "#" + i + "-" + j ).css("background-image", "url(/img/cartoon_grass_ne.png)")
                }
                if(this.maze[i+1][j] === "O" && this.maze[i][j-1] === "O") {
                    $( "#" + i + "-" + j ).css("background-image", "url(/img/cartoon_grass_sw.png)")
                }
                if(this.maze[i+1][j] === "O" && this.maze[i][j+1] === "O") {
                    $( "#" + i + "-" + j ).css("background-image", "url(/img/cartoon_grass_se.png)")
                }
            }
        }
    }





/* ----------------------------------
    jQuery functionalities (gameplay) 
-----------------------------------*/
    $( ".start-btn" ).click(function() {
        $(".wall").addClass("active")
        $(".hint").text("Move your mouse through the maze. Don't touch the walls!").css("color", "black")
    });

    //Animation of starting button. 
    $( ".start-btn" ).mousedown(function() {
        $( ".start-btn" ).toggleClass("clicked")
    })
    $( ".start-btn" ).mouseup(function() {
        $( ".start-btn" ).toggleClass("clicked")
    })
    //You lose if mouse hovers on wall (also enemies: see separate code block, ca. line 160)
    $(".wall").hover(function(){
        if ($(".wall").hasClass("active")) {
            $(".wall").removeClass("active")
            $(".hint").text("HAH. You lost. Try again? Just press the button.").css("color", "brown")
        };
    });
    //you win and next level is triggered when mouse reached
    $(".finish-btn").hover(function(){
        if ($(".wall").hasClass("active")) {
            $(".wall").removeClass("active")
            alert("You won. You aren't completely worthless :D.")
            $(".hint").text("Oh, you actually made it? Wow. Well you know what to do")
            nextLevel() //Chooses the next level (see below)
        };
    });
} //end of makeMap()



/*-------------------------------------
    CHOOSING THE NEXT LEVEL
-------------------------------------*/
function nextLevel() {
    if($(".lvl2-snakes").length >=0) { //Checks if snakes-enemy exists yet. If not -> level 2.
        secondLevel.makeMap()
        injectEnemyLvl2()
    }
    else if ($(".lvl2-snakes").length < 0) {
        console.log("hello level 3?")
        thirdLevel.makeMap()
    }
}



/*-------------------------------------
    ADDING ENEMIES TO LEVEL 2
-------------------------------------*/
function injectEnemyLvl2() {
    var enemy1 = $( "<div class='lvl2-snakes snake-pos-1'></div>" )
    var enemy2 = $( "<div class='lvl2-snakes snake-pos-2'></div>" )
    var enemy3 = $( "<div class='lvl2-snakes snake-pos-3'></div>" )
    var enemy4 = $( "<div class='lvl2-snakes snake-pos-4'></div>" )
    $(".gameboard").append(enemy1, enemy2, enemy3, enemy4);

    $(".lvl2-snakes").mouseover(function(){
        if ($(".wall").hasClass("active")) {
            $(".wall").removeClass("active")
            $(".hint").text("You didn't see the only moving thing on the map, huh.")
        };
    });
}






/* --------------------------------------
    Map instances
---------------------------------------*/


//FIRST LEVEL
var firstLevel = new Game([
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*"],
    ["*", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "O", "S", "S", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "F", "F", "O"],
    ["*", "O", "S", "S", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "F", "F", "O"],
    ["*", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ]

)

//SECOND LEVEL
var secondLevel = new Game([
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*"],
    ["*", "O", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*"],
    ["*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "O", "O", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "O", "O", "O", "O", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"],
    ["*", "O", "S", "S", "O", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "F", "F", "O"],
    ["*", "O", "S", "S", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "F", "F", "O"],
    ["*", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ])

var thirdLevel = new Game([
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "O", "O", "O", "O", "*", "*", "O", "*", "*", "O", "O", "O", "O", "*", "*", "O", "O", "O", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "O", "O", "O", "O", "*", "*", "O", "*", "*", "O", "O", "O", "O", "*", "*", "O", "O", "O", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "O", "O", "*", "*", "*", "O", "*", "*", "O", "O", "O", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "O", "O", "O", "O", "*", "O", "*", "*", "O", "O", "O", "O", "*", "*", "O", "O", "O", "O", "*", "*", "O", "O", "O", "O", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "O", "S", "S", "O", "*", "O", "*", "*", "O", "*", "*", "O", "*", "*", "O", "O", "O", "O", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "F", "F", "O"],
    ["*", "O", "S", "S", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "F", "F", "O"],
    ["*", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ])


firstLevel.makeMap()
